# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/refs/heads/master/src/schemas/json/github-workflow.json

name: CD

on:
  push:
    tags:
      - '*'
    branches:
      - dev

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      WEB_DOCKER_IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
    permissions:
      contents: 'read'
      packages: 'write'
      attestations: 'write'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: git
        env:
          STAGING_PUBLIC_FRONT_URL: ${{ secrets.STAGING_PUBLIC_FRONT_URL }}
          PUBLIC_FRONT_URL: ${{ secrets.PUBLIC_FRONT_URL }}

        run: |
          if [[ $GITHUB_REF_TYPE == "tag" ]]; then
            echo "NEXT_PUBLIC_FRONT_URL=$PUBLIC_FRONT_URL" >> $GITHUB_ENV
          else
            echo "NEXT_PUBLIC_FRONT_URL=$STAGING_PUBLIC_FRONT_URL" >> $GITHUB_ENV
          fi
          echo "NEXT_PUBLIC_GTM_ID=${{ secrets.GTM_ID }}" >> $GITHUB_ENV
      - name: Build Docker images
        uses: docker/bake-action@v5
        env:
          WORDPRESS_API_URL: ${{ secrets.WORDPRESS_API_URL }}
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.prod.yaml
          set: |
            *.cache-from=type=gha,scope=${{ github.ref }}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{ github.ref }},mode=max
      - name: Docker push
        run: |
          docker push ${{ env.WEB_DOCKER_IMAGE }}
      - name: Docker tag and push ref_name
        run: |
          docker tag ${{ env.WEB_DOCKER_IMAGE }} ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      - name: Docker tag and push latest
        if: github.ref_type == 'tag'
        run: |
          docker tag ${{ env.WEB_DOCKER_IMAGE }} ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
  deploy:
    name: Deploy
    needs: [build]
    uses: ./.github/workflows/deploy.yml
    with:
      argocd-appname: inrage-inr-dev
    secrets:
      argocd-server: ${{ secrets.STAGING_ARGOCD_SERVER }}
      argocd-username: ${{ secrets.STAGING_ARGOCD_USERNAME }}
      argocd-password: ${{ secrets.STAGING_ARGOCD_PASSWORD }}
      webhook-url: ${{ secrets.WEBHOOK_URL }}
